// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bigkevmcd/john/pkg/mailet (interfaces: Mailet)

// Package mailet is a generated GoMock package.
package mailet

import (
	mailet "github.com/bigkevmcd/john/pkg/mailet"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMailet is a mock of Mailet interface
type MockMailet struct {
	ctrl     *gomock.Controller
	recorder *MockMailetMockRecorder
}

// MockMailetMockRecorder is the mock recorder for MockMailet
type MockMailetMockRecorder struct {
	mock *MockMailet
}

// NewMockMailet creates a new mock instance
func NewMockMailet(ctrl *gomock.Controller) *MockMailet {
	mock := &MockMailet{ctrl: ctrl}
	mock.recorder = &MockMailetMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMailet) EXPECT() *MockMailetMockRecorder {
	return m.recorder
}

// Handle mocks base method
func (m *MockMailet) Handle(arg0 *mailet.Mail) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handle", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Handle indicates an expected call of Handle
func (mr *MockMailetMockRecorder) Handle(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockMailet)(nil).Handle), arg0)
}
